@page
@model AceJobAgency.Pages.ResetPasswordModel
@{
    ViewData["Title"] = "Reset Password";
}

<div class="container mt-5">
    <div class="row justify-content-center align-items-center">
        <div class="col-sm-12 col-md-12 col-lg-4">
            <h1 class="mb-3">Reset Password</h1>

            @if (!ViewData.ModelState.IsValid)
            {
                <div class="alert alert-danger">
                    @foreach (var error in ViewData.ModelState.Values.SelectMany(v => v.Errors))
                    {
                        <p>@error.ErrorMessage</p>
                    }
                </div>
            }

            <form method="post">
                <input type="hidden" asp-for="Token" />
                <input type="hidden" asp-for="Email" />

                <!-- New Password with Strength Bar -->
                <div class="mb-3">
                    <label class="form-label" asp-for="NewPassword">New Password</label>
                    <div class="input-group">
                        <input type="password" asp-for="NewPassword" class="form-control" id="newPassword" required />
                        <button type="button" class="btn btn-outline-secondary" id="toggleNewPassword">
                            <i class="fas fa-eye"></i>
                        </button>
                    </div>
                    <small class="form-text text-muted">
                        Must be at least 12 characters long, including an uppercase letter, a number, and a special character.
                    </small>
                    <div id="passwordErrors" class="text-danger"></div>
                    <div class="password-strength">
                        <div id="strengthBar"></div>
                    </div>
                    <span asp-validation-for="NewPassword" class="text-danger"></span>
                </div>

                <!-- Confirm New Password -->
                <div class="mb-3">
                    <label class="form-label" asp-for="ConfirmPassword">Confirm New Password</label>
                    <div class="input-group">
                        <input type="password" asp-for="ConfirmPassword" class="form-control" id="confirmNewPassword" required />
                        <button type="button" class="btn btn-outline-secondary" id="toggleConfirmNewPassword">
                            <i class="fas fa-eye"></i>
                        </button>
                    </div>
                    <span asp-validation-for="ConfirmPassword" class="text-danger"></span>
                </div>

                <div class="mb-3">
                    <button type="submit" class="btn btn-primary">Reset Password</button>
                </div>
            </form>
        </div>
    </div>
</div>

<style>
    .password-strength {
        height: 5px;
        width: 100%;
        background-color: #ddd;
        margin-top: 5px;
        position: relative;
    }

    #strengthBar {
        height: 5px;
        width: 0%;
        background-color: red;
        transition: width 0.3s ease-in-out;
    }
</style>

<script>
    document.addEventListener("DOMContentLoaded", function () {
        function validatePassword(password) {
            let strength = 0;
            let errors = [];

            if (password.length >= 12) strength++;
            else errors.push("Must be at least 12 characters long.");

            if (/[A-Z]/.test(password)) strength++;
            else errors.push("Must include an uppercase letter.");

            if (/[a-z]/.test(password)) strength++;
            else errors.push("Must include a lowercase letter.");

            if (/\d/.test(password)) strength++;
            else errors.push("Must include a number.");

            if (/[\W_]/.test(password)) strength++;
            else errors.push("Must include a special character.");

            return { strength, errors };
        }

        function updateStrengthBar(password) {
            const { strength, errors } = validatePassword(password);
            const strengthBar = document.getElementById("strengthBar");
            const passwordErrors = document.getElementById("passwordErrors");

            passwordErrors.innerHTML = errors.length > 0 ? errors.join("<br>") : "";

            const strengthPercentage = (strength / 5) * 100;
            strengthBar.style.width = strengthPercentage + "%";

            if (strength === 1) strengthBar.style.backgroundColor = "red";
            else if (strength === 2 || strength === 3) strengthBar.style.backgroundColor = "orange";
            else if (strength === 4) strengthBar.style.backgroundColor = "yellow";
            else if (strength === 5) strengthBar.style.backgroundColor = "green";
        }

        document.getElementById("newPassword").addEventListener("input", function () {
            updateStrengthBar(this.value);
        });

        // Toggle Password Visibility
        document.getElementById("toggleNewPassword").addEventListener("click", function () {
            togglePasswordVisibility("newPassword", this);
        });

        document.getElementById("toggleConfirmNewPassword").addEventListener("click", function () {
            togglePasswordVisibility("confirmNewPassword", this);
        });

        function togglePasswordVisibility(fieldId, toggleButton) {
            const field = document.getElementById(fieldId);
            field.type = field.type === "password" ? "text" : "password";
            toggleButton.classList.toggle("fa-eye-slash");
        }
    });
</script>